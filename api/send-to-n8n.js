/**
 * Render Serverless Function –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö –≤ n8n
 */
export default async function handler(req, res) {
    // CORS headers
    res.setHeader('Access-Control-Allow-Origin', '*');
    res.setHeader('Access-Control-Allow-Headers', 'Content-Type');
    res.setHeader('Access-Control-Allow-Methods', 'POST, OPTIONS');
    res.setHeader('Content-Type', 'application/json');

    // Handle preflight requests
    if (req.method === 'OPTIONS') {
        return res.status(200).end();
    }

    // –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º —Ç–æ–ª—å–∫–æ POST –∑–∞–ø—Ä–æ—Å—ã
    if (req.method !== 'POST') {
        return res.status(405).json({ error: 'Method not allowed' });
    }

    try {
        console.log('üì§ Render —Ñ—É–Ω–∫—Ü–∏—è: –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ n8n...');
        
        // –ü–∞—Ä—Å–∏–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –∑–∞–ø—Ä–æ—Å–∞
        const orderData = req.body;
        
        console.log('üìã –î–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑–∞ –¥–ª—è n8n:', orderData);
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ n8n webhook
        const n8nResponse = await fetch('https://flow8n.ru/webhook/order-created', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(orderData)
        });

        console.log(`üì® –û—Ç–≤–µ—Ç –æ—Ç n8n: ${n8nResponse.status} ${n8nResponse.statusText}`);

        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —É—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç
        return res.status(200).json({ 
            success: true, 
            n8nStatus: n8nResponse.status,
            message: '–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ n8n'
        });

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –≤ Render —Ñ—É–Ω–∫—Ü–∏–∏ send-to-n8n:', error);
        
        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—à–∏–±–∫—É
        return res.status(500).json({ 
            success: false,
            error: error.message,
            message: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –¥–∞–Ω–Ω—ã—Ö –≤ n8n'
        });
    }
} 